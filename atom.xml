<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>乘风破浪</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.python100.com/"/>
  <updated>2018-07-24T05:16:10.446Z</updated>
  <id>http://www.python100.com/</id>
  
  <author>
    <name>chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VNC安装</title>
    <link href="http://www.python100.com/2018/07/24/VNC%E5%AE%89%E8%A3%85/"/>
    <id>http://www.python100.com/2018/07/24/VNC安装/</id>
    <published>2018-07-24T05:11:00.000Z</published>
    <updated>2018-07-24T05:16:10.446Z</updated>
    
    <content type="html"><![CDATA[<hr><p>VNC安装</p><h2 id="安装在Centos7"><a href="#安装在Centos7" class="headerlink" title="安装在Centos7"></a>安装在Centos7</h2><p>1、安装的centos已经安装了GUI桌面系统</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装桌面版，安装有500M以上，有点慢</span></span><br><span class="line">yum groupinstall <span class="string">"GNOME Desktop"</span> <span class="string">"Graphical Administration Tools"</span>    </span><br><span class="line"><span class="comment">#默认使用图形化桌面启动,三种命令</span></span><br><span class="line">ln -sf /lib/systemd/system/runlevel5.target /etc/systemd/system/default.target    </span><br><span class="line">systemctl set-default runlevel5.target      </span><br><span class="line">systemctl set-default graphical.target</span><br></pre></td></tr></table></figure><p>2、安装vncserver</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install tigervnc-server</span><br></pre></td></tr></table></figure><p>3、启动并配置vncserver</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@cloud ~]<span class="comment"># vncserver </span></span><br><span class="line">[root@cloud ~]<span class="comment"># vncpasswd</span></span><br></pre></td></tr></table></figure><p>4、修改配置文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@cloud ~]<span class="comment"># cd /root/.vnc/</span></span><br><span class="line">[root@cloud .vnc]<span class="comment"># cat config </span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Remote desktop service (VNC)</span><br><span class="line">After=syslog.target network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">User=root  <span class="comment">#设置远程连接用户为root</span></span><br><span class="line"><span class="comment"># Clean any existing files in /tmp/.X11-unix environment</span></span><br><span class="line"></span><br><span class="line">ExecStartPre=/bin/sh -c <span class="string">'/usr/bin/vncserver -kill 1 &gt; /dev/null 2&gt;&amp;1 || :'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#这一句不要改变</span></span><br><span class="line">ExecStart=/usr/bin/vncserver :<span class="number">1</span> -geometry <span class="number">1280</span>x1024 -depth <span class="number">16</span> -securitytypes=none -fp /usr/share/X11/fonts/misc</span><br><span class="line"></span><br><span class="line">PIDFile=/root/.vnc/%H%i.pid</span><br><span class="line"></span><br><span class="line">ExecStop=/bin/sh -c <span class="string">'/usr/bin/vncserver -kill 1 &gt; /dev/null 2&gt;&amp;1 || :'</span></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>5、修改完后启动 vncserver-1</p><p>[root@cloud system]# systemctl start vncserver@\:1.service</p><p>6、然后使用vncviewer，输入IP:5901就可以连接到虚机了</p><h2 id="安装在win10"><a href="#安装在win10" class="headerlink" title="安装在win10"></a>安装在win10</h2><p>下载server和viewer两个版本，都分别安装</p><p><a href="https://www.xp510.com/xiazai/Networking/mstsc/23862.html" target="_blank" rel="noopener">https://www.xp510.com/xiazai/Networking/mstsc/23862.html</a></p><p>server配置：</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;VNC安装&lt;/p&gt;
&lt;h2 id=&quot;安装在Centos7&quot;&gt;&lt;a href=&quot;#安装在Centos7&quot; class=&quot;headerlink&quot; title=&quot;安装在Centos7&quot;&gt;&lt;/a&gt;安装在Centos7&lt;/h2&gt;&lt;p&gt;1、安装的centos已经安装了GUI桌
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>cloudstack-概念</title>
    <link href="http://www.python100.com/2018/07/24/cloudstack-%E6%A6%82%E5%BF%B5/"/>
    <id>http://www.python100.com/2018/07/24/cloudstack-概念/</id>
    <published>2018-07-24T05:11:00.000Z</published>
    <updated>2018-07-24T05:13:04.474Z</updated>
    
    <content type="html"><![CDATA[<hr><p>CloudStack是一个开源的具有高可用性及扩展性的云计算平台 ，现在又Apache基金会在管理。</p><h5 id="云计算的三种服务模式"><a href="#云计算的三种服务模式" class="headerlink" title="云计算的三种服务模式"></a><strong>云计算的三种服务模式</strong></h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SAAS：软件即服务</span><br><span class="line">PAAS：平台即服务</span><br><span class="line">IAAS：基础架构即服务</span><br></pre></td></tr></table></figure><h5 id="区域-Zone-："><a href="#区域-Zone-：" class="headerlink" title="区域(Zone)："></a><strong>区域(Zone)：</strong></h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">区域可以理解为一个数据中心或机房，是逻辑范围最大的组成单元。由一组POD、二级存储、及网络架构组成。区域只能选择一中网络架构。区域间是相互独立的，如需要通信，只能在网络配置打通区域的公有网络。区域之间只能复制ISO和模板，虚拟机不能进行区域之间的迁移工作，如需要，可将虚机转换成模板，再复制到另一个区域。创建时，可以选择该区域是公共区域，还是只对某组用户的私有区域。</span><br></pre></td></tr></table></figure><h5 id="提供点（POD）"><a href="#提供点（POD）" class="headerlink" title="提供点（POD）"></a><strong>提供点（POD）</strong></h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可理解为一个物理机架，包括交换机、服务器和存储。所以提供点内的计算服务器，系统虚机都在同一个子网中</span><br></pre></td></tr></table></figure><h5 id="集群（cluster）"><a href="#集群（cluster）" class="headerlink" title="集群（cluster）"></a><strong>集群（cluster）</strong></h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最小的逻辑组织单元，由一组计算服务器及一个或多个主存储组成， 同一个集群内的服务器必须使用相同的虚拟化管理程序，硬件型号也必须相同。集群内的虚拟机可以在集群内的不同主机之间实现动态迁移。集群内可以添加多个作为共享存储所使用的主存储</span><br></pre></td></tr></table></figure><h5 id="计算节点（HOST-就是运行虚拟机（VM）的主机"><a href="#计算节点（HOST-就是运行虚拟机（VM）的主机" class="headerlink" title="计算节点（HOST)  就是运行虚拟机（VM）的主机"></a><strong>计算节点（HOST)  就是运行虚拟机（VM）的主机</strong></h5><h5 id="主存储-一级存储"><a href="#主存储-一级存储" class="headerlink" title="主存储 (一级存储)"></a><strong>主存储 (一级存储)</strong></h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">一般作为每个集群多台计算服务器共同使用的共享存储存在。一个集群中可以有一个或多个不同类型的存储。主存储用于存储所有虚拟机内数据的镜像文件和数据卷文件。分为共享存储和本地存储。使用共享存储可以实现虚机的在线迁移。</span><br><span class="line">一级存储与 cluster 关联，它为该 cluster 中的主机的全部虚拟机提供磁盘卷。一个 cluster 至少有一个一级存储，且在部署时位置要临近主机以提供高性能。</span><br></pre></td></tr></table></figure><h5 id="二级存储"><a href="#二级存储" class="headerlink" title="二级存储"></a><strong>二级存储</strong></h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">每个区域只需要一个二级存储，用于存放创建虚拟所使用的ISO镜像文件、模板文件，以及对虚机所做的快照和卷备份文件。这些都是占用空间大、读写频率低的数据文件(冷数据),并不是关键数据，使用配置不高、最简单的NFS来存储就够了。</span><br><span class="line">二级存储与 zone 关联，它存储模板文件，ISO 镜像和磁盘卷快照。</span><br></pre></td></tr></table></figure><h5 id="一个-zone-包含多个-pod，一个-pod-包含多个-cluster，一个-cluster-包含多个-host"><a href="#一个-zone-包含多个-pod，一个-pod-包含多个-cluster，一个-cluster-包含多个-host" class="headerlink" title="一个 zone 包含多个 pod，一个 pod 包含多个 cluster，一个 cluster 包含多个 host"></a><strong>一个 zone 包含多个 pod，一个 pod 包含多个 cluster，一个 cluster 包含多个 host</strong></h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">模板：可以启动虚拟机的操作系统镜像，也包括了诸如已安装应用的其余配置信息。</span><br><span class="line">ISO 镜像：包含操作系统数据或启动媒质的磁盘镜像。</span><br><span class="line">磁盘卷快照：虚拟机数据的已储存副本，能用于数据恢复或者创建新模板。</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">一个完整的 CloudStack 环境包括两部分：</span><br><span class="line">    管理服务器（Management Server）</span><br><span class="line">    虚拟机管理器 (Hypervisor)  也叫主机host或者代理agent</span><br></pre></td></tr></table></figure><h5 id="虚拟机实例的动态迁移"><a href="#虚拟机实例的动态迁移" class="headerlink" title="虚拟机实例的动态迁移"></a><strong>虚拟机实例的动态迁移</strong></h5><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">静态迁移：在虚拟机关机或暂停的情况下从一台物理机迁移到另一台物理机</span><br><span class="line">动态迁移：让虚拟机在不关机且能持续提供服务的前提下，从一个虚拟平台的主机（Host）迁移到其他虚拟平台的主机上运行，中间仅有非常短暂的停机时间，普通用户无法对自己的虚拟机进行动态迁移，只有管理员可以。虚拟机实例的动态迁移只能在同一集群中进</span><br></pre></td></tr></table></figure><p>安全组</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">安全组相当于在虚拟机实例的操作系统之外部署了一道防火墙，每个CloudStack账户都会生成一个默认安全组，该组默认拒绝所有流入流量和允许所有流出流量。一个用户可以创建多个安全组，一个安全组可以应用到多个虚拟机实例上，一个虚拟机实例也可以使用多个安全组。一个安全组相当于一条或多条防火墙规则。虚拟机实例在创建时可以选择多个安全组，选择后不可以加入或退出其他安全组</span><br></pre></td></tr></table></figure><h4 id="高级网络功能"><a href="#高级网络功能" class="headerlink" title="高级网络功能"></a>高级网络功能</h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">虚拟路由器本质上一个运行Debian <span class="number">7.0</span>的虚拟机实例，提供了各种高级网络管理功能。</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>、防火墙（不能基于账户进行策略指定，也不能设定出口规则）</span><br><span class="line">        不能基于账户进行策略指定，也不能设定出口规则</span><br><span class="line">        默认可以访问外部服务，但外部服务不能访问虚拟机实例</span><br><span class="line"><span class="number">2</span>、负载均衡</span><br><span class="line">    负载均衡有工作在二层，三层，四层和七层的负载均衡</span><br><span class="line">    可以通过集群的方式来保证高可用</span><br><span class="line">    CloudStack的负载均衡是通过在虚拟路由器里使用HAProxy实现的</span><br><span class="line">    轮询算法：根据用户的请求依次将请求转发给内部的应用服务器</span><br><span class="line">    最少连接算法：把当前请求分配给连接数最少的应用服务器</span><br><span class="line">    源算法：尽量保证始终来自同一个客户端的请求分发给同一个应用服务器，适用于不使用Cookie的Web应用</span><br><span class="line">    要使用负载均衡，前端的负载均衡器需要为该服务配置一个服务IP地址，服务地址用于接收用户的请求。</span><br><span class="line">    公用端口用于接收用户外部的请求，专用端口指虚拟机提供服务的端口</span><br><span class="line"><span class="number">3</span>、静态NAT：将内外的私有IP转换为公有IP（<span class="number">1</span>对<span class="number">1</span>）</span><br><span class="line"><span class="number">4</span>、端口转发：把访问A服务器某端口的数据转发到B服务器的某端口中</span><br><span class="line"><span class="number">5</span>、VPN</span><br><span class="line">      VPN可以使用户安全，方便地访问一个虚拟网络内的所有虚拟机</span><br><span class="line">      默认情况下，防火墙信任VPN拨入者</span><br><span class="line"><span class="number">6</span>、VPC：Virtual Private Cloud</span><br><span class="line">    从整体网络中分割出来的一个逻辑隔离的网络，在该虚拟网络中，用户具有完全的控制权</span><br><span class="line"><span class="number">7</span>、冗余路由</span><br><span class="line">    使用多个路由来防止单点故障时导致内部网络不能与外部网络通信的问题</span><br><span class="line">    冗余路由组共用一个内网IP（网关）和一个外网IP</span><br><span class="line">    提供冗余功能的两天虚拟路由器应尽量运行在不同物理主机上</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;CloudStack是一个开源的具有高可用性及扩展性的云计算平台 ，现在又Apache基金会在管理。&lt;/p&gt;
&lt;h5 id=&quot;云计算的三种服务模式&quot;&gt;&lt;a href=&quot;#云计算的三种服务模式&quot; class=&quot;headerlink&quot; title=&quot;云计算的三种服务模
      
    
    </summary>
    
      <category term="cloudstack" scheme="http://www.python100.com/categories/cloudstack/"/>
    
    
      <category term="cloudstack" scheme="http://www.python100.com/tags/cloudstack/"/>
    
  </entry>
  
  <entry>
    <title>cloudstack安装</title>
    <link href="http://www.python100.com/2018/07/24/cloudstack%E6%96%87%E6%A1%A3/"/>
    <id>http://www.python100.com/2018/07/24/cloudstack文档/</id>
    <published>2018-07-24T05:11:00.000Z</published>
    <updated>2018-07-24T05:13:58.490Z</updated>
    
    <content type="html"><![CDATA[<hr><p>cloudstack安装</p><p><a href="http://developer.huawei.com/ict/forum/thread-23211.html" target="_blank" rel="noopener">http://developer.huawei.com/ict/forum/thread-23211.html</a></p><p><a href="https://blog.csdn.net/chengxuyuanyonghu/article/details/78847656" target="_blank" rel="noopener">https://blog.csdn.net/chengxuyuanyonghu/article/details/78847656</a></p><p><a href="https://blog.csdn.net/hejin_some/article/details/72673192" target="_blank" rel="noopener">https://blog.csdn.net/hejin_some/article/details/72673192</a></p><p><a href="https://blog.csdn.net/hzhsan/article/details/44098537/" target="_blank" rel="noopener">https://blog.csdn.net/hzhsan/article/details/44098537/</a>                  kvm网络</p><p>virt-install –virt-type=kvm –name=centos88 –vcpus=2 –memory=4096 –location=/tmp/CentOS-7-x86_64-Minimal-1511.iso –disk path=/home/vms/centos88.qcow2,size=40,format=qcow2 –network bridge=br0 –graphics none –extra-args=’console=ttyS0’ –force</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virt-install --connect qemu:///system --name centos7 --memory=<span class="number">1024</span> --vcpus=<span class="number">2</span> --disk path=/<span class="keyword">data</span>/secondary/kali.qcow2,device=disk,format=qcow2,bus=virtio,cache=none,size=<span class="number">5</span> --cdrom /tmp/CentOS-<span class="number">7</span>-x86_64-DVD-<span class="number">1804</span>.iso  --os-type=linux --network bridge=br0,model=virtio,model=e1000 --hvm --virt-type=kvm --noautoconsole --graphics vnc,listen=<span class="number">0.0</span>.<span class="number">0.0</span>,port=<span class="number">5901</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virt-install --virt-type=kvm --name=centos88 --vcpus=<span class="number">2</span> --memory=<span class="number">1024</span> --location=/tmp/CentOS-<span class="number">7</span>-x86_64-DVD-<span class="number">1804</span>.iso  --disk path=/<span class="keyword">data</span>/secondary/kali.qcow2,size=<span class="number">6</span>,format=qcow2 --network bridge=br0 --graphics none --extra-args=<span class="string">'console=ttyS0'</span> --force</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;cloudstack安装&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://developer.huawei.com/ict/forum/thread-23211.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://develope
      
    
    </summary>
    
      <category term="cloudstack" scheme="http://www.python100.com/categories/cloudstack/"/>
    
    
      <category term="cloudstack" scheme="http://www.python100.com/tags/cloudstack/"/>
    
  </entry>
  
  <entry>
    <title>cloudstack管理节点安装参考</title>
    <link href="http://www.python100.com/2018/07/24/cloudstack%E7%AE%A1%E7%90%86%E8%8A%82%E7%82%B9%E5%AE%89%E8%A3%85/"/>
    <id>http://www.python100.com/2018/07/24/cloudstack管理节点安装/</id>
    <published>2018-07-24T05:11:00.000Z</published>
    <updated>2018-07-24T05:14:48.263Z</updated>
    
    <content type="html"><![CDATA[<hr><p>参考文档：</p><p><a href="https://www.ibm.com/developerworks/cn/cloud/library/1303_chenyz_cloudstack/" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/cloud/library/1303_chenyz_cloudstack/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;参考文档：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.ibm.com/developerworks/cn/cloud/library/1303_chenyz_cloudstack/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ht
      
    
    </summary>
    
      <category term="cloudstack" scheme="http://www.python100.com/categories/cloudstack/"/>
    
    
      <category term="cloudstack" scheme="http://www.python100.com/tags/cloudstack/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客next主题设计</title>
    <link href="http://www.python100.com/2018/07/24/hexo%E5%8D%9A%E5%AE%A2next%E4%B8%BB%E9%A2%98%E8%AE%BE%E8%AE%A1/"/>
    <id>http://www.python100.com/2018/07/24/hexo博客next主题设计/</id>
    <published>2018-07-24T05:11:00.000Z</published>
    <updated>2018-07-24T06:06:18.181Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="hexo博客next主题设计"><a href="#hexo博客next主题设计" class="headerlink" title="hexo博客next主题设计"></a>hexo博客next主题设计</h2><p>参考文章：<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">http://theme-next.iissnan.com/getting-started.html</a></p><h3 id="一、新增访客统计及网站字数统计"><a href="#一、新增访客统计及网站字数统计" class="headerlink" title="一、新增访客统计及网站字数统计"></a>一、新增访客统计及网站字数统计</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、安装依赖包，切换到博客根目录，打开Git Bash，输入以下代码安装字数统计包</span><br><span class="line">npm install hexo-wordcount --save</span><br><span class="line"><span class="number">2</span>、打开文件：themes/next/layout/_partials/footer.swig,输入以下代码后保存退出。</span><br><span class="line"></span><br><span class="line">&lt;!-- 新增访客统计代码 --&gt;</span><br><span class="line">&lt;div class=<span class="string">"copyright"</span> &gt;</span><br><span class="line">  &#123;% set current = date(Date.now(), <span class="string">"YYYY"</span>) %&#125;</span><br><span class="line">  &amp;copy; &#123;% <span class="keyword">if</span> theme.since and theme.since != current %&#125; &#123;&#123; theme.since &#125;&#125; - &#123;% endif %&#125;</span><br><span class="line">  &lt;span itemprop=<span class="string">"copyrightYear"</span>&gt;&#123;&#123; current &#125;&#125;&lt;/span&gt;</span><br><span class="line">  &lt;span class=<span class="string">"with-love"</span>&gt;</span><br><span class="line">    &lt;i class=<span class="string">"fa fa-balance-scale"</span>&gt;&lt;/i&gt;</span><br><span class="line">  &lt;/span&gt;</span><br><span class="line">  &lt;span class=<span class="string">"author"</span> itemprop=<span class="string">"copyrightHolder"</span>&gt;&#123;&#123; config.author &#125;&#125;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=<span class="string">"busuanzi-count"</span>&gt;</span><br><span class="line">    &lt;script async=<span class="string">""</span> src=<span class="string">"https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;span class=<span class="string">"site-uv"</span>&gt;</span><br><span class="line">      &lt;i class=<span class="string">"fa fa-user"</span>&gt;&lt;/i&gt;</span><br><span class="line">      访问用户： &lt;span class=<span class="string">"busuanzi-value"</span> id=<span class="string">"busuanzi_value_site_uv"</span>&gt;&lt;/span&gt; 人</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">    &lt;div class=<span class="string">"powered-by"</span>&gt;&lt;/div&gt;</span><br><span class="line">    &lt;span class=<span class="string">"site-uv"</span>&gt;</span><br><span class="line">      &lt;i class=<span class="string">"fa fa-eye"</span>&gt;&lt;/i&gt;</span><br><span class="line">      访问次数： &lt;span class=<span class="string">"busuanzi-value"</span> id=<span class="string">"busuanzi_value_site_pv"</span>&gt;&lt;/span&gt; 次</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">    &lt;!-- 博客字数统计 --&gt;</span><br><span class="line">    &lt;span class=<span class="string">"site-pv"</span>&gt;</span><br><span class="line">      &lt;i class=<span class="string">"fa fa-pencil"</span>&gt;&lt;/i&gt;</span><br><span class="line">      博客全站共： &lt;span class=<span class="string">"post-count"</span>&gt;&#123;&#123; totalcount(site) &#125;&#125;&lt;/span&gt; 字</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;!-- 新增访客统计代码 END--&gt;</span><br></pre></td></tr></table></figure><h3 id="二、next主题如何添加动态背景"><a href="#二、next主题如何添加动态背景" class="headerlink" title="二、next主题如何添加动态背景"></a>二、next主题如何添加动态背景</h3><h5 id="注意：如果next主题在5-1-1以上的话就不用我这样设置，直接在主题配置文件中找到canvas-nest-false，把它改为canvas-nest-true就行了（注意分号后面要加一个空格）"><a href="#注意：如果next主题在5-1-1以上的话就不用我这样设置，直接在主题配置文件中找到canvas-nest-false，把它改为canvas-nest-true就行了（注意分号后面要加一个空格）" class="headerlink" title="注意：如果next主题在5.1.1以上的话就不用我这样设置，直接在主题配置文件中找到canvas_nest: false，把它改为canvas_nest: true就行了（注意分号后面要加一个空格）"></a><strong>注意</strong>：如果next主题在5.1.1以上的话就不用我这样设置，直接在主题配置文件中找到canvas_nest: false，把它改为canvas_nest: true就行了（注意分号后面要加一个空格）</h5><h5 id="修改-layout-swig"><a href="#修改-layout-swig" class="headerlink" title="修改_layout.swig"></a>修改<code>_layout.swig</code></h5><p>打开 <code>next/layout/_layout.swig</code><br>在 <code>&lt; /body&gt;</code>之前添加代码(注意不要放在&lt; /head&gt;的后面)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><h5 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h5><p>打开 <code>/next/_config.yml</code>,在里面添加如下代码：(可以放在最后面)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># background settings</span></span><br><span class="line"><span class="comment"># --------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># add canvas-nest effect</span></span><br><span class="line"><span class="comment"># see detail from https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line">canvas_nest: true</span><br></pre></td></tr></table></figure><p>到此就结束了，运行 <code>hexo clean</code>，然后运行 <code>hexo g</code>,然后运行 <code>hexo s</code>，最后打开浏览器在浏览器的地址栏输入 <code>localhost:4000</code> 就能看到效果了\（￣︶￣）/ </p><h5 id="如果你感觉默认的线条太多的话"><a href="#如果你感觉默认的线条太多的话" class="headerlink" title="如果你感觉默认的线条太多的话"></a>如果你感觉默认的线条太多的话</h5><h5 id="可以这么设置-gt"><a href="#可以这么设置-gt" class="headerlink" title="可以这么设置====&gt;"></a>可以这么设置====&gt;</h5><p>在上一步修改 <code>_layout.swig</code>中，把刚才的这些代码：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span></span><br><span class="line">color=<span class="string">"0,0,255"</span> opacity=<span class="string">'0.7'</span> zIndex=<span class="string">"-2"</span> count=<span class="string">"99"</span> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><ul><li><code>color</code> ：线条颜色, 默认: <code>&#39;0,0,0&#39;</code>；三个数字分别为(R,G,B)</li><li><code>opacity</code>: 线条透明度（0~1）, 默认: <code>0.5</code></li><li><code>count</code>: 线条的总数量, 默认: <code>150</code></li><li><code>zIndex:</code> 背景的z-index属性，css属性用于控制所在层的位置, 默认: <code>-1</code></li></ul><h3 id="三、然hexo内的markdown文件显示文件"><a href="#三、然hexo内的markdown文件显示文件" class="headerlink" title="三、然hexo内的markdown文件显示文件"></a>三、然hexo内的markdown文件显示文件</h3><p>将网站根目录下的source文件夹下新建images目录，将需要的文件根据自己的需要在新建文件夹来保存图片，引用图片的格式为/images/img/1.jpg</p><p><img src="D:\mygit\chenmaoqing\img\img1" alt="img1"></p><h3 id="四、添加评论"><a href="#四、添加评论" class="headerlink" title="四、添加评论"></a>四、添加评论</h3><p>可以使用的评论系统有</p><ul><li><p>HyperComments：<a href="https://www.hypercomments.com/" target="_blank" rel="noopener">https://www.hypercomments.com</a> （来自俄罗斯的评论系统，使用谷歌账号注册。可以访问，不会用，好气，，）</p></li><li><p>来必力：<a href="https://livere.com/" target="_blank" rel="noopener">https://livere.com</a> （来自韩国，使用邮箱注册。）</p></li><li>畅言： <a href="http://changyan.kuaizhan.com/" target="_blank" rel="noopener">http://changyan.kuaizhan.com</a> （安装需要备案号。不太好用。）</li><li>Gitment： <a href="https://github.com/imsun/gitment" target="_blank" rel="noopener">https://github.com/imsun/gitment</a> （有点小bug，比如说每次需要手动初始化，登录时会跳到主页。。）</li><li>Valine: <a href="https://github.com/xCss/Valine" target="_blank" rel="noopener">https://github.com/xCss/Valine</a> (基于Leancloud的极简风评论系统，用了下，没效果，是我Next主题的原因还是？）</li></ul><p>综上，最终采用了来必力。 </p><p>打开来必力官网：<br> <a href="https://livere.com/" target="_blank" rel="noopener">https://livere.com</a></p><p>按套路注册（有可能注册上面要花费点功夫）。（貌似需要科学上网？之前没科学上网好像登录界面显示不了）。</p><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p>点击上方的安装，选择免费的city版本。 获取UUID</p><p><img src="D:\mygit\chenmaoqing\img\来必力" alt="1532405120649"></p><p>复制其中的uid字段。</p><p>打开主题目录下的 <code>blog/themes/next/_config.yml</code> 配置文件，定位到 <code>livere_uid</code> 字段，粘贴上刚刚复制的UID。至此，大功告成。 </p><p>五、添加打赏功能</p><p>六、添加本地搜索</p><ul><li><p>安装 <code>hexo-generator-searchdb</code>，在站点的根目录下执行以下命令： </p><p>$ npm install hexo-generator-searchdb –save</p></li><li><p>编辑 站点配置文件，新增以下内容到任意位置： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure></li><li><p>编辑 主题配置文件，启用本地搜索功能： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h2 id=&quot;hexo博客next主题设计&quot;&gt;&lt;a href=&quot;#hexo博客next主题设计&quot; class=&quot;headerlink&quot; title=&quot;hexo博客next主题设计&quot;&gt;&lt;/a&gt;hexo博客next主题设计&lt;/h2&gt;&lt;p&gt;参考文章：&lt;a href=&quot;htt
      
    
    </summary>
    
      <category term="hexo" scheme="http://www.python100.com/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>进程线程</title>
    <link href="http://www.python100.com/2018/07/03/%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B/"/>
    <id>http://www.python100.com/2018/07/03/进程线程/</id>
    <published>2018-07-03T14:19:00.000Z</published>
    <updated>2018-07-13T09:08:17.628Z</updated>
    
    <content type="html"><![CDATA[<p> 进程、线程、多线程相关总结</p><p>一、说说概念</p><p>1、进程（process）</p><p>狭义定义：进程就是一段程序的执行过程。</p><p>广义定义：进程是一个具有一定独立功能的程序关于某个数据集合的一次运行活动。它是操作系统动态执行的基本单元，在传统的操作系统中，进程既是基本的分配单元，也是基本的执行单元。</p><p>简单的来讲进程的概念主要有两点：第一，进程是一个实体。每一个进程都有它自己的地址空间，一般情况下，包括文本区域（text region）、数据区域（data region）和堆栈（stack region）。文本区域存储处理器执行的代码；数据区域存储变量和进程执行期间使用的动态分配的内存；堆栈区域存储着活动过程调用的指令和本地变量。第二，进程是一个“执行中的程序”。程序是一个没有生命的实体，只有处理器赋予程序生命时，它才能成为一个活动的实体，我们称其为进程。</p><p>进程状态：进程有三个状态，就绪、运行和阻塞。就绪状态其实就是获取了出cpu外的所有资源，只要处理器分配资源就可以马上执行。就绪状态有排队序列什么的，排队原则不再赘述。运行态就是获得了处理器分配的资源，程序开始执行。阻塞态，当程序条件不够时候，需要等待条件满足时候才能执行，如等待i/o操作时候，此刻的状态就叫阻塞态。</p><p>2、程序</p><p>说起进程，就不得不说下程序。先看定义：程序是指令和数据的有序集合，其本身没有任何运行的含义，是一个静态的概念。而进程则是在处理机上的一次执行过程，它是一个动态的概念。这个不难理解，其实进程是包含程序的，进程的执行离不开程序，进程中的文本区域就是代码区，也就是程序。</p><p>3、线程</p><p>通常在一个进程中可以包含若干个线程，当然一个进程中至少有一个线程，不然没有存在的意义。线程可以利用进程所拥有的资源，在引入线程的操作系统中，通常都是把进程作为分配资源的基本单位，而把线程作为独立运行和独立调度的基本单位，由于线程比进程更小，基本上不拥有系统资源，故对它的调度所付出的开销就会小得多，能更高效的提高系统多个程序间并发执行的程度。</p><p>4、多线程</p><p>在一个程序中，这些独立运行的程序片段叫作“线程”（Thread），利用它编程的概念就叫作“多线程处理”。多线程是为了同步完成多项任务，不是为了提高运行效率，而是为了提高资源使用效率来提高系统的效率。线程是在同一时间需要完成多项任务的时候实现的。</p><p>最简单的比喻多线程就像火车的每一节车厢，而进程则是火车。车厢离开火车是无法跑动的，同理火车也不可能只有一节车厢。多线程的出现就是为了提高效率。</p><p>二、说说区别</p><p>1、进程与线程的区别：</p><p>进程和线程的主要差别在于它们是不同的操作系统资源管理方式。进程有独立的地址空间，一个进程崩溃后，在保护模式下不会对其它进程产生影响，而线程只是一个进程中的不同执行路径。线程有自己的堆栈和局部变量，但线程之间没有单独的地址空间，一个线程死掉就等于整个进程死掉，所以多进程的程序要比多线程的程序健壮，但在进程切换时，耗费资源较大，效率要差一些。但对于一些要求同时进行并且又要共享某些变量的并发操作，只能用线程，不能用进程。</p><p>1) 简而言之,一个程序至少有一个进程,一个进程至少有一个线程.</p><p>2) 线程的划分尺度小于进程，使得多线程程序的并发性高。</p><p>3) 另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率。</p><p>4) 线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制。</p><p>5) 从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别。</p><p>三、说说优缺点</p><p>线程和进程在使用上各有优缺点：线程执行开销小，但不利于资源的管理和保护；而进程正相反。同时，线程适合于在SMP(多核处理机)机器上运行，而进程则可以跨机器迁移。</p><p>四、总结</p><p>入职第一天闲的无聊，参考下别人的总结自己也简单总结了下。知道以上的基本面试够用了，至于进程、线程的细节，底层构成，调度等问题是操作系统的东西。我就不详述了。</p><p>五、实例</p><p>1、多线程写日志，涉及到单例模式，异步写</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt; 进程、线程、多线程相关总结&lt;/p&gt;
&lt;p&gt;一、说说概念&lt;/p&gt;
&lt;p&gt;1、进程（process）&lt;/p&gt;
&lt;p&gt;狭义定义：进程就是一段程序的执行过程。&lt;/p&gt;
&lt;p&gt;广义定义：进程是一个具有一定独立功能的程序关于某个数据集合的一次运行活动。它是操作系统动态执行的基本单元，
      
    
    </summary>
    
      <category term="进程线程" scheme="http://www.python100.com/categories/%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B/"/>
    
    
  </entry>
  
  <entry>
    <title>git和markdown使用总结</title>
    <link href="http://www.python100.com/2018/06/21/git%E5%92%8Cmarkdown%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
    <id>http://www.python100.com/2018/06/21/git和markdown使用总结/</id>
    <published>2018-06-20T18:36:00.000Z</published>
    <updated>2018-07-24T04:42:20.913Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git-上传更新代码步骤"><a href="#git-上传更新代码步骤" class="headerlink" title="git 上传更新代码步骤"></a>git 上传更新代码步骤</h1><pre><code>- git pull   #先拉取最新代码- 将自己的写好的代码放入到相应的文件夹下，比如op/issues- 如果有图片将对应的图片也复制到当前目录下的img下- git add 自己加入到的文件和图片- git commit 自己加入和文件和图片 -m  message- 这里如果不加-m message 选项可能会push不成功，最好加上- git push   #上传自己新加的文件到GitHub</code></pre><h1 id="markdown语法总结"><a href="#markdown语法总结" class="headerlink" title="markdown语法总结"></a>markdown语法总结</h1><h2 id="图片"><a href="#图片" class="headerlink" title="- 图片"></a>- 图片</h2><pre><code>方法一：    - 加入图片，格式是 ![]()    - 其中的[]中的内容可以自定义，比如[log]    - ()中写使用该图片的文件相对图片的相对路径方法二：    &lt;img src=&quot;images/img/1.jpg&quot; width=256 height=256 /&gt;</code></pre><h3 id="图片引用方法一实例"><a href="#图片引用方法一实例" class="headerlink" title="图片引用方法一实例"></a>图片引用方法一实例</h3><pre><code>此时img文件夹和当前文档在同一级目录下![1](/images/img/1.jpg)![2](/images/img/2.jpg)</code></pre><p><img src="/images/img/1.jpg" alt="1"><br><img src="/images/img/2.jpg" alt="2"></p><h3 id="图片引用方法二实例，可以控制图片大小"><a href="#图片引用方法二实例，可以控制图片大小" class="headerlink" title="图片引用方法二实例，可以控制图片大小"></a>图片引用方法二实例，可以控制图片大小</h3><pre><code>&lt;img src=&quot;/images/img/1.jpg&quot; width=256 height=256 /&gt;&lt;img src=&quot;/images/img/2.jpg&quot; width=256 height=256 /&gt;</code></pre><p><img src="/images/img/1.jpg" width="256" height="256"><br><img src="/images/img/2.jpg" width="256" height="256"></p><h3 id="让图片居中的方法，使用div标签"><a href="#让图片居中的方法，使用div标签" class="headerlink" title="让图片居中的方法，使用div标签"></a>让图片居中的方法，使用div标签</h3><pre><code>&lt;div align=center&gt;&lt;img src=&quot;/images/img/1.jpg&quot; width=256 height=256 /&gt;&lt;/div&gt;</code></pre><div align="center"><br><img src="/images/img/1.jpg" width="256" height="256"><br></div><h2 id="斜体"><a href="#斜体" class="headerlink" title="- 斜体"></a>- 斜体</h2><pre><code>- 用左右各一个 *的方式包裹住文字就是斜体的语法</code></pre><h2 id="粗体"><a href="#粗体" class="headerlink" title="- 粗体"></a>- 粗体</h2><pre><code>- 用左右各两个**的方式包裹住文字就是粗体的语法</code></pre><h2 id="改变字体大小"><a href="#改变字体大小" class="headerlink" title="- 改变字体大小"></a>- 改变字体大小</h2><pre><code>- 一个字、一句话、一个段落加上#就可以改变字体的大小</code></pre><h2 id="分割线"><a href="#分割线" class="headerlink" title="- 分割线"></a>- 分割线</h2><pre><code>- 输入三个--就可以得到分割线</code></pre><h2 id="引用"><a href="#引用" class="headerlink" title="- 引用"></a>- 引用</h2><pre><code>-在内容首位加入&gt;符号即可</code></pre><h2 id="表格"><a href="#表格" class="headerlink" title="- 表格"></a>- 表格</h2><pre><code>1、 原生的表格语法    | 嘻嘻 | 哈哈 | 呵呵    | :------------- :|:-------------:| :-----:|    | 你好|我好|大家好 |    | 是的| 是的 | 是的 |2、 也可以使用html语言来实现，实例如下    &lt;table&gt;      &lt;tr&gt;        &lt;th width=10%, bgcolor=yellow &gt;参数&lt;/th&gt;        &lt;th width=40%, bgcolor=yellow&gt;详细解释&lt;/th&gt;        &lt;th width=50%, bgcolor=yellow&gt;备注&lt;/th&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td bgcolor=#eeeeee&gt; -l &lt;/td&gt;        &lt;td&gt; use a long listing format  &lt;/td&gt;        &lt;td&gt; 以长列表方式显示（显示出文件/文件夹详细信息）  &lt;/td&gt;      &lt;/tr&gt;      &lt;tr&gt;        &lt;td bgcolor=#00FF00&gt;-t &lt;/td&gt;        &lt;td&gt; sort by modification time &lt;/td&gt;        &lt;td&gt; 按照修改时间排序（默认最近被修改的文件/文件夹排在最前面） &lt;/td&gt;      &lt;tr&gt;        &lt;td bgcolor=rgb(0,10,0)&gt;-r &lt;/td&gt;        &lt;td&gt; reverse order while sorting &lt;/td&gt;        &lt;td&gt;  逆序排列 &lt;/td&gt;      &lt;/tr&gt;    &lt;/table&gt;</code></pre><h1 id="html方式实现表格实例"><a href="#html方式实现表格实例" class="headerlink" title="html方式实现表格实例"></a>html方式实现表格实例</h1><table><br>  <tr><br>    <th width="10%," bgcolor="yellow">参数</th><br>    <th width="40%," bgcolor="yellow">详细解释</th><br>    <th width="50%," bgcolor="yellow">备注</th><br>  </tr><br>  <tr><br>    <td bgcolor="#eeeeee"> -l </td><br>    <td> use a long listing format  </td><br>    <td> 以长列表方式显示（显示出文件/文件夹详细信息）  </td><br>  </tr><br>  <tr><br>    <td bgcolor="#00FF00">-t </td><br>    <td> sort by modification time </td><br>    <td> 按照修改时间排序（默认最近被修改的文件/文件夹排在最前面） </td><br>  </tr><tr><br>    <td bgcolor="rgb(0,10,0)">-r </td><br>    <td> reverse order while sorting </td><br>    <td>  逆序排列 </td><br>  </tr><br></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;git-上传更新代码步骤&quot;&gt;&lt;a href=&quot;#git-上传更新代码步骤&quot; class=&quot;headerlink&quot; title=&quot;git 上传更新代码步骤&quot;&gt;&lt;/a&gt;git 上传更新代码步骤&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;- git pull   #先拉取最新代码

      
    
    </summary>
    
    
      <category term="git&amp;markdown语法" scheme="http://www.python100.com/tags/git-markdown%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>python笔记</title>
    <link href="http://www.python100.com/2018/06/21/%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.python100.com/2018/06/21/笔记/</id>
    <published>2018-06-20T18:36:00.000Z</published>
    <updated>2018-06-20T19:22:31.996Z</updated>
    
    <content type="html"><![CDATA[<hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">一个粗心的发报员在发送莫尔斯电码（Morse Code）的时候，忘记在发送字母和单词之间停顿，结果收报系统收到的是下面这样的一个没有分隔符的点（.）划（-）的序列（请忽略换行符）。</span><br><span class="line"> </span><br><span class="line">.-.-....-.-...--.-...-....--...-.-...-.--.------..-...-..-.-.---...-..-..---..-..</span><br><span class="line">....--..-.--.-...-.--......-.........-..-.----.-.....-....--.-.-.--.-..---..-....</span><br><span class="line">..-...-..-.--.-.----......-.--.-----..-------.-.-..---.-.-.--..-.-...............</span><br><span class="line">--...--....--..-....-.-----.....-...-------.-......-.........-..-..--.-....-...--</span><br><span class="line">....-.--.-.....--..-.....--..-.---.--...-.-.-..-.-.....---.-.-.-.----....-..-....</span><br><span class="line">.--..----......-...-.--.-...--.....--.....-.......-....---..-..--...-------.--...</span><br><span class="line">.---..---.....-.-.-....-.-...--..-....---..--.--...-.-.-..-.-.....---.-.-.-.----.</span><br><span class="line">...-..-.....--..----.</span><br><span class="line"> </span><br><span class="line">已知这份报文的原始内容是一部著名英文小说的片段，请问，这部小说的作者是：</span><br><span class="line"> </span><br><span class="line">(A) H. G. Wells</span><br><span class="line">(B) J. K. Rowling</span><br><span class="line">(C) Isaac Asimov</span><br><span class="line">(D) Lewis Carroll</span><br><span class="line">(E) Jack London</span><br><span class="line">(F) Stephen King</span><br><span class="line">(G) J. R. R. Tolkien</span><br><span class="line">(H) Edgar Rice Burroughs</span><br><span class="line"> </span><br><span class="line">请写出本题解题的主要思路，以及解题时使用的主要代码片段：</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">15分钟</span><br><span class="line">1. 排序方式：DESC | ASCE，分别表示按降序和升序排列，大小写不敏感</span><br><span class="line">2. 一组十进制整数字符串，以&quot;,&quot;符号作为分隔符</span><br><span class="line">例子：</span><br><span class="line">DESC 789,123,456</span><br><span class="line">ASCE 234,567,89</span><br><span class="line"></span><br><span class="line">排序方式DESC ASCE请忽略大小写</span><br><span class="line">输出描述:</span><br><span class="line">按指定排序方式排序后得到的十进制整数字符串；</span><br><span class="line">输出的数字字符串数组，以&quot;,&quot;字符作为分隔符。</span><br><span class="line">示例1</span><br><span class="line">输入</span><br><span class="line">DESC 789,123,456</span><br><span class="line">输出</span><br><span class="line">789,456,123</span><br><span class="line">#Python Ruby C/C++ PHP Java</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">海投简历标准：</span><br><span class="line">1：头像：不要用真人的</span><br><span class="line">2：专业技能列表：多丰富一些</span><br><span class="line">了解的也写上 敲门砖</span><br><span class="line">3：项目经验</span><br><span class="line">看着写</span><br><span class="line">4：不要写培训</span><br></pre></td></tr></table></figure><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><ul><li>对象是什么？：对象是一个<strong>模型</strong><ul><li>IT行业 这就是一个对象<ul><li>C/C++，Python，PHP，Java 细节</li></ul></li><li>楼房：平房，四合院，公寓</li><li>面：刀削面，牛肉丸子面，方便面</li></ul></li><li>为什么这些可以称作是一个模型？：<ul><li>有特征、有共同点</li><li>把共同点组合起来，就可以抽象的总结出来一个模型</li><li>那么这个模型就叫做对象</li></ul></li></ul><h1 id="class"><a href="#class" class="headerlink" title="class"></a>class</h1><ul><li><p>class用来定义一个<strong>类</strong>(一个共同点的模型)：</p><ul><li><p>属性：</p><ul><li>函数：方法，人们喜欢把类中的函数叫方法</li><li>变量：字符串，列表，元组，字典，集合</li></ul></li><li><p>类：一个属性集合</p></li><li><p>实例：在内存里通过模型实例化创建的数据</p><ul><li>实例是一个容器一样，包含了所有类里的属性，而且是实际存在于内存中的</li></ul></li><li><p>实例化：通过类名括号的方式</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class A:</span><br><span class="line">pass</span><br><span class="line">a = A() <span class="comment"># 实例化</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>面向对象的语法中，我们可以通过xxx.xxxx来获取到对应的属性</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">mylist.remove(<span class="number">2</span>)</span><br><span class="line">mylist</span><br><span class="line">[<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure></li><li><p>Python中处处皆对象</p></li></ul><h1 id="self指针的意义"><a href="#self指针的意义" class="headerlink" title="self指针的意义"></a>self指针的意义</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.self是一个将我们函数声明为单独为一个实例工作的参数</span><br><span class="line"></span><br><span class="line">2.每一个加了self的函数或者变量 都只能为自己的实例来工作</span><br><span class="line">c1.run()</span><br><span class="line">c2.run()</span><br><span class="line"></span><br><span class="line">3.在实例调用的时候，当前实例都会覆盖掉self</span><br><span class="line"></span><br><span class="line">4.self用来指向当前工作实例</span><br><span class="line">self是约定俗称的命名，你也可以叫别的，但是一般都叫self</span><br></pre></td></tr></table></figure><p>#<strong>init</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">__init__函数为每一个实例进行数据的初始化工作</span><br><span class="line">构造函数 X</span><br><span class="line">数据初始化函数 √ </span><br><span class="line">就是为了给实例创建属于自己的变量</span><br><span class="line">__init__函数在实例化过程中自动调用，不需要你手动的来调用</span><br><span class="line">__init__函数不允许有返回值，一旦有返回值，那么就报错啦</span><br><span class="line">TypeError: __init__() should return None, not &apos;int&apos;</span><br><span class="line">类型错误： 该函数必须返回一个None，而不是int</span><br></pre></td></tr></table></figure><p>郑州市金水区聚源路与宏图街交叉口聚源国际大厦1309</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
      <category term="python" scheme="http://www.python100.com/tags/python/"/>
    
  </entry>
  
</feed>
